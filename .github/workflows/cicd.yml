name: CI-CD

on:
  push:
    branches: [ master ]

jobs:
  environmenttests:
    name: Environment Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
  eslint:
    name: Eslint
    runs-on: ubuntu-latest
    needs: environmenttests
    steps:
    - uses: actions/checkout@v1
    - name: install node v12
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: yarn install
      run: yarn install
    - name: eslint
      uses: icrawl/action-eslint@v1
  docker:
    name: Docker build and push
    needs: [environmenttests, eslint]
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: martinbobbio/backend-mitenis:latest
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  deploy:
    name: Push on Heroku
    runs-on: ubuntu-latest
    needs: [environmenttests, eslint, docker]
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.5.7
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "martinbobbio-mitenis"
          heroku_email: ${{secrets.EMAIL}}
        env:
          HD_URL_GOOGLE_PLACES: ${{secrets.URL_GOOGLE_PLACES}}
          HD_TOKEN_GOOGLE_MAPS: ${{secrets.TOKEN_GOOGLE_MAPS}}
          HD_HOST: ${{secrets.HOST}}
          HD_NODE_ENV: ${{secrets.NODE_ENV}}
          HD_TEST: "Hello"